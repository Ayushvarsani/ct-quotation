{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:file((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/]+\\.\\w+)/",
      "destination": "/:file",
      "internal": true,
      "missing": [
        {
          "type": "header",
          "key": "x-nextjs-data"
        }
      ],
      "statusCode": 308,
      "regex": "^(?:/((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/]+\\.\\w+))/$"
    },
    {
      "source": "/:notfile((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/\\.]+)",
      "destination": "/:notfile/",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/\\.]+))$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/admin/companies/[id]/edit",
      "regex": "^/admin/companies/([^/]+?)/edit(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/admin/companies/(?<nxtPid>[^/]+?)/edit(?:/)?$"
    },
    {
      "page": "/user/products/[id]/edit",
      "regex": "^/user/products/([^/]+?)/edit(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/user/products/(?<nxtPid>[^/]+?)/edit(?:/)?$"
    },
    {
      "page": "/user/users/[id]/edit",
      "regex": "^/user/users/([^/]+?)/edit(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/user/users/(?<nxtPid>[^/]+?)/edit(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/admin/companies",
      "regex": "^/admin/companies(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/companies(?:/)?$"
    },
    {
      "page": "/admin/companies/create",
      "regex": "^/admin/companies/create(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/companies/create(?:/)?$"
    },
    {
      "page": "/admin/login",
      "regex": "^/admin/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/login(?:/)?$"
    },
    {
      "page": "/admin/profile",
      "regex": "^/admin/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/profile(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/user/dashboard",
      "regex": "^/user/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/dashboard(?:/)?$"
    },
    {
      "page": "/user/products",
      "regex": "^/user/products(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/products(?:/)?$"
    },
    {
      "page": "/user/products/add",
      "regex": "^/user/products/add(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/products/add(?:/)?$"
    },
    {
      "page": "/user/profile",
      "regex": "^/user/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/profile(?:/)?$"
    },
    {
      "page": "/user/quotation",
      "regex": "^/user/quotation(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/quotation(?:/)?$"
    },
    {
      "page": "/user/users",
      "regex": "^/user/users(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/users(?:/)?$"
    },
    {
      "page": "/user/users/add",
      "regex": "^/user/users/add(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/user/users/add(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}